input {
  beats {
    port => 5044
  }
}


filter {
  # Identifier les logs Fortigate
  if [log][file][path] =~ "/var/log/test-logs/fortigate.log" {
    mutate {
      add_tag => ["fortigate"]
    }
  }

  if "fortigate" in [tags] {
    # Extraire les paires clÃ©=valeur
    kv {
      source => "message"
      field_split => " "
      value_split => "="
      trim_key => "\""
      trim_value => "\""
      remove_field => ["message"]
    }

    # Construire le timestamp
    mutate {
      add_field => {
        "log_datetime" => "%{date} %{time}"
      }
      remove_field => ["date", "time"]
    }

    date {
      match => ["log_datetime", "yyyy-MM-dd HH:mm:ss"]
      target => "@timestamp"
      remove_field => ["log_datetime"]
    }

    #######################
    # ðŸ§  ECS Normalisation #
    #######################

    mutate {
      rename => {
        "srcip"       => "source.ip"
        "srcport"     => "source.port"
        "dstip"       => "destination.ip"
        "dstport"     => "destination.port"
        "srcintf"     => "source.interface"
        "dstintf"     => "destination.interface"
        "devname"     => "host.name"
        "action"      => "event.action"
        "proto"       => "network.transport"
        "policyid"    => "rule.id"
        "service"     => "network.protocol"
        "msg"         => "message"
        "sentbyte"    => "source.bytes"
        "rcvdbyte"    => "destination.bytes"
        "app"         => "network.application"
        "duration"    => "event.duration"
        "status"      => "event.outcome"
        "user"        => "user.name"
      }

      add_field => {
        "event.kind"     => "event"
        "event.module"   => "fortigate"
        "event.dataset"  => "fortigate.%{type}"
        "observer.vendor" => "Fortinet"
        "observer.product" => "FortiGate"
      }
    }

    # Type d'Ã©vÃ©nement global (utile pour dashboard)
    if [type] == "traffic" {
      mutate { replace => { "event.category" => "network" } }
    } else if [type] == "event" {
      mutate { replace => { "event.category" => "authentication" } }
    } else if [type] == "utm" {
      mutate { replace => { "event.category" => "threat" } }
    } else {
      mutate { replace => { "event.category" => "unknown" } }
    }

    # Ajout de tags spÃ©cifiques
    if [type] == "traffic" and [subtype] == "forward" {
      mutate { add_tag => ["fortigate_traffic"] }
    } else if [type] == "event" and [subtype] == "user" {
      if [status] == "failed" {
        mutate { add_tag => ["fortigate_auth_fail"] }
      } else {
        mutate { add_tag => ["fortigate_auth_success"] }
      }
    } else if [type] == "utm" and [subtype] == "virus" {
      mutate { add_tag => ["fortigate_antivirus"] }
    } else if [type] == "utm" and [subtype] == "ips" {
      mutate { add_tag => ["fortigate_ips"] }
    } else {
      mutate { add_tag => ["fortigate_unknown"] }
    }

    # Suppression des champs inutiles
    mutate {
      remove_field => [
        "host", "agent", "input", "ecs", "fields", "path"
      ]
    }

  } else {
    drop {}
  }
}

output {
  elasticsearch {
    hosts => ["http://192.168.56.101:9200"]
    index => "fortigate-logs-%{+YYYY.MM.dd}"
  }

  file {
    path => "/tmp/logstash-fortigate-debug.log"
  }
}
