input {
  beats {
    port => 5044
  }
}

filter {
  ## --- Identification du fichier ---
  if [log][file][path] =~ /httpsd_access\.log$/ {
    mutate { add_tag => ["plesk_access"] }
  }

  ## --- Parsing des logs d'accès Plesk ---
  if "plesk_access" in [tags] {
    grok {
      match => {
        "message" => '%{IP:source.ip} - (?:%{USERNAME:user.name}|-) \[%{HTTPDATE:timestamp}\] "%{WORD:http.request.method} %{URIPATHPARAM:url.original} HTTP/%{NUMBER:http.version}" %{NUMBER:http.response.status_code:int} (?:%{NUMBER:http.response.body.bytes:int}|-) "(?:%{DATA:http.request.referrer}|-)" "(?:%{DATA:user_agent.original}|-)"'
      }
      overwrite => ["message"]
      tag_on_failure => ["_grokparsefailure_plesk_access"]
    }

    ## --- Conversion de date (seulement si le parsing a réussi) ---
    if "_grokparsefailure_plesk_access" not in [tags] {
      date {
        match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
        target => "@timestamp"
        locale => "en"
      }

      ## --- Analyse du user agent ---
      if [user_agent.original] and [user_agent.original] != "-" {
        useragent {
          source => "user_agent.original"
          target => "user_agent"
        }
      }

      ## --- Enrichissements communs ---
      mutate {
        add_field => {
          "log_type"        => "plesk_access"
          "event.category"  => "web"
          "event.type"      => "access"
          "service_type"    => "httpsd"
        }
        remove_field => ["timestamp"]
      }

      ## --- Résultat de la requête (succès / échec) ---
      if [http.response.status_code] {
        if [http.response.status_code] >= 200 and [http.response.status_code] < 400 {
          mutate { add_field => { "event.outcome" => "success" } }
        } else {
          mutate { add_field => { "event.outcome" => "failure" } }
        }
      }

      ## --- Détection de user-agent suspects ---
      if [user_agent.original] and [user_agent.original] =~ /(sqlmap|nmap|nikto|masscan|python-requests)/ {
        mutate {
          add_field => { "threat.indicator" => "suspect_user_agent" }
          add_tag => ["suspicious_access"]
        }
      }
    }
  }
}

output {
  if "plesk_access" in [tags] and "_grokparsefailure_plesk_access" not in [tags] {
    elasticsearch {
      hosts => ["http://192.168.56.101:9200"]
      index => "plesk-access-%{+YYYY.MM.dd}"
    }

    ## Debug local
    file {
      path => "/tmp/plesk_access_parsed.log"
      codec => rubydebug
    }
  }

  ## Échec de parsing
  if "_grokparsefailure_plesk_access" in [tags] {
    file {
      path => "/var/log/logstash/grok_failures-plesk_access-%{+YYYY-MM-dd}.log"
    }
  }
}
